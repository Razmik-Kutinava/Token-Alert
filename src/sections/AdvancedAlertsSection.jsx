import { For, Show, createSignal } from 'solid-js';
import { Priority, AlertCategory, TimeFrame } from '../models/AlertTypes';
import { AdvancedAlertBuilder } from '../components/AdvancedAlertBuilder';

/**
 * –°–µ–∫—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤
 */
export function AdvancedAlertsSection({
  alerts,
  tokens,
  livePrices,
  onCreateAlert,
  onUpdateAlert,
  onDeleteAlert,
  onPauseAlert,
  onResumeAlert
}) {
  const [showBuilder, setShowBuilder] = createSignal(false);
  const [filterCategory, setFilterCategory] = createSignal('all');
  const [filterPriority, setFilterPriority] = createSignal('all');
  const [expandedAlert, setExpandedAlert] = createSignal(null);

  /**
   * –§–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã
   */
  const filteredAlerts = () => {
    let filtered = alerts();
    
    if (filterCategory() !== 'all') {
      filtered = filtered.filter(a => a.category === filterCategory());
    }
    
    if (filterPriority() !== 'all') {
      filtered = filtered.filter(a => a.priority === filterPriority());
    }
    
    return filtered;
  };

  /**
   * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤
   */
  const alertsStats = () => {
    const all = alerts();
    return {
      total: all.length,
      active: all.filter(a => a.isActive && !a.isPaused).length,
      paused: all.filter(a => a.isPaused).length,
      triggered: all.filter(a => a.triggeredCount > 0).length
    };
  };

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É —Ç–æ–∫–µ–Ω–∞
   */
  const getCurrentPrice = (tokenId) => {
    return livePrices()[tokenId]?.usd || 0;
  };

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
   */
  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–∞
   */
  const formatTimeFrame = (timeFrame) => {
    const frames = {
      [TimeFrame.MINUTE_5]: '5 –º–∏–Ω',
      [TimeFrame.MINUTE_15]: '15 –º–∏–Ω',
      [TimeFrame.HOUR_1]: '1 —á–∞—Å',
      [TimeFrame.HOUR_4]: '4 —á–∞—Å–∞',
      [TimeFrame.HOUR_24]: '24 —á–∞—Å–∞',
      [TimeFrame.DAY_7]: '7 –¥–Ω–µ–π',
      [TimeFrame.DAY_30]: '30 –¥–Ω–µ–π'
    };
    return frames[timeFrame] || timeFrame;
  };

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
   */
  const getCategoryInfo = (categoryId) => {
    const categories = {
      portfolio: { name: '–ü–æ—Ä—Ç—Ñ–µ–ª—å', icon: 'üíº', color: 'blue' },
      market: { name: '–†—ã–Ω–æ–∫', icon: 'üìä', color: 'green' },
      trading: { name: '–¢—Ä–µ–π–¥–∏–Ω–≥', icon: 'üìà', color: 'purple' },
      news: { name: '–ù–æ–≤–æ—Å—Ç–∏', icon: 'üì∞', color: 'yellow' }
    };
    return categories[categoryId] || categories.portfolio;
  };

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–µ
   */
  const getPriorityInfo = (priorityLevel) => {
    return Priority[priorityLevel.toUpperCase()] || Priority.MEDIUM;
  };

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ª–æ–≤–∏–π
   */
  const formatConditions = (alert) => {
    if (!alert.conditions || alert.conditions.length === 0) {
      return '–£—Å–ª–æ–≤–∏—è –Ω–µ –∑–∞–¥–∞–Ω—ã';
    }

    const operatorNames = {
      above: '–í—ã—à–µ',
      below: '–ù–∏–∂–µ',
      equals: '–†–∞–≤–Ω–æ',
      increases_by: '–†–æ—Å—Ç –Ω–∞',
      decreases_by: '–ü–∞–¥–µ–Ω–∏–µ –Ω–∞',
      spike: '–í—Å–ø–ª–µ—Å–∫',
      change: '–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞'
    };

    return alert.conditions.map(c => {
      const operator = operatorNames[c.operator] || c.operator;
      const value = c.field === 'price' ? `$${c.value}` : c.value;
      return `${operator} ${value}`;
    }).join(', ');
  };

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–ª–µ—Ä—Ç–∞
   */
  const handleCreateAlert = (alertData) => {
    onCreateAlert(alertData);
    setShowBuilder(false);
  };

  return (
    <div class="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
        <div>
          <h2 class="text-3xl font-bold mb-2">
            üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∞–ª–µ—Ä—Ç—ã
          </h2>
          <p class="text-gray-400">
            –ú–æ—â–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏
          </p>
        </div>

        <button
          onClick={() => setShowBuilder(!showBuilder())}
          class="px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 transform hover:scale-105"
        >
          {showBuilder() ? '‚úï –ó–∞–∫—Ä—ã—Ç—å' : '‚ûï –°–æ–∑–¥–∞—Ç—å –∞–ª–µ—Ä—Ç'}
        </button>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
        <div class="bg-dark-card rounded-lg p-4 border border-gray-700">
          <div class="text-gray-400 text-sm mb-1">–í—Å–µ–≥–æ –∞–ª–µ—Ä—Ç–æ–≤</div>
          <div class="text-2xl font-bold">{alertsStats().total}</div>
        </div>
        <div class="bg-dark-card rounded-lg p-4 border border-green-500/30">
          <div class="text-gray-400 text-sm mb-1">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
          <div class="text-2xl font-bold text-green-400">{alertsStats().active}</div>
        </div>
        <div class="bg-dark-card rounded-lg p-4 border border-yellow-500/30">
          <div class="text-gray-400 text-sm mb-1">–ù–∞ –ø–∞—É–∑–µ</div>
          <div class="text-2xl font-bold text-yellow-400">{alertsStats().paused}</div>
        </div>
        <div class="bg-dark-card rounded-lg p-4 border border-purple-500/30">
          <div class="text-gray-400 text-sm mb-1">–°—Ä–∞–±–æ—Ç–∞–ª–æ</div>
          <div class="text-2xl font-bold text-purple-400">{alertsStats().triggered}</div>
        </div>
      </div>

      {/* –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∞–ª–µ—Ä—Ç–æ–≤ */}
      <Show when={showBuilder()}>
        <AdvancedAlertBuilder
          tokens={tokens}
          onCreateAlert={handleCreateAlert}
          onCancel={() => setShowBuilder(false)}
        />
      </Show>

      {/* –§–∏–ª—å—Ç—Ä—ã */}
      <div class="bg-dark-card rounded-lg p-4 border border-gray-700">
        <div class="flex flex-wrap gap-4">
          <div class="flex-1 min-w-[200px]">
            <label class="block text-sm text-gray-400 mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
            <select
              value={filterCategory()}
              onInput={(e) => setFilterCategory(e.target.value)}
              class="w-full bg-dark-bg border border-gray-600 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
              <option value="portfolio">üíº –ü–æ—Ä—Ç—Ñ–µ–ª—å</option>
              <option value="market">üìä –†—ã–Ω–æ–∫</option>
              <option value="trading">üìà –¢—Ä–µ–π–¥–∏–Ω–≥</option>
              <option value="news">üì∞ –ù–æ–≤–æ—Å—Ç–∏</option>
            </select>
          </div>

          <div class="flex-1 min-w-[200px]">
            <label class="block text-sm text-gray-400 mb-2">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</label>
            <select
              value={filterPriority()}
              onInput={(e) => setFilterPriority(e.target.value)}
              class="w-full bg-dark-bg border border-gray-600 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              <option value="all">–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã</option>
              <option value="critical">üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π</option>
              <option value="high">üü† –í–∞–∂–Ω—ã–π</option>
              <option value="medium">üü° –°—Ä–µ–¥–Ω–∏–π</option>
              <option value="low">üü¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π</option>
            </select>
          </div>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∞–ª–µ—Ä—Ç–æ–≤ */}
      <div class="space-y-4">
        <Show
          when={filteredAlerts().length > 0}
          fallback={
            <div class="bg-dark-card rounded-lg p-12 border border-gray-700 text-center">
              <div class="text-6xl mb-4">üîî</div>
              <h3 class="text-xl font-semibold mb-2">–ê–ª–µ—Ä—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç</h3>
              <p class="text-gray-400 mb-6">
                –°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–ª–µ—Ä—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä—ã–Ω–∫–∞
              </p>
              <button
                onClick={() => setShowBuilder(true)}
                class="px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all"
              >
                –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –∞–ª–µ—Ä—Ç
              </button>
            </div>
          }
        >
          <For each={filteredAlerts()}>
            {(alert) => {
              const priority = getPriorityInfo(alert.priority);
              const category = getCategoryInfo(alert.category);
              const isExpanded = expandedAlert() === alert.id;
              const currentPrice = getCurrentPrice(alert.tokenId);

              return (
                <div 
                  class={`bg-dark-card rounded-lg border-2 transition-all ${
                    alert.isPaused
                      ? 'border-gray-700 opacity-60'
                      : alert.triggeredCount > 0
                      ? 'border-green-500 shadow-lg shadow-green-500/20'
                      : 'border-gray-700 hover:border-gray-600'
                  }`}
                >
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∞–ª–µ—Ä—Ç–∞ */}
                  <div class="p-4">
                    <div class="flex items-start justify-between gap-4">
                      <div class="flex-1">
                        <div class="flex items-center gap-2 mb-2">
                          <span class="text-2xl">{priority.icon}</span>
                          <span class={`px-2 py-1 rounded text-xs font-semibold bg-${category.color}-500/20 text-${category.color}-400`}>
                            {category.icon} {category.name}
                          </span>
                          <Show when={alert.isPaused}>
                            <span class="px-2 py-1 rounded text-xs font-semibold bg-gray-500/20 text-gray-400">
                              ‚è∏Ô∏è –ü–∞—É–∑–∞
                            </span>
                          </Show>
                          <Show when={alert.triggeredCount > 0}>
                            <span class="px-2 py-1 rounded text-xs font-semibold bg-green-500/20 text-green-400">
                              ‚úÖ –°—Ä–∞–±–æ—Ç–∞–ª {alert.triggeredCount}x
                            </span>
                          </Show>
                        </div>

                        <h3 class="text-lg font-bold mb-1">{alert.name}</h3>
                        <p class="text-sm text-gray-400 mb-2">{alert.description}</p>

                        <div class="flex flex-wrap gap-4 text-sm">
                          <div class="flex items-center gap-2">
                            <span class="text-gray-400">–¢–æ–∫–µ–Ω:</span>
                            <span class="font-semibold">{alert.tokenName} ({alert.tokenSymbol?.toUpperCase()})</span>
                          </div>
                          <div class="flex items-center gap-2">
                            <span class="text-gray-400">–¶–µ–Ω–∞:</span>
                            <span class="font-semibold">${currentPrice.toFixed(6)}</span>
                          </div>
                          <div class="flex items-center gap-2">
                            <span class="text-gray-400">–ü–µ—Ä–∏–æ–¥:</span>
                            <span class="font-semibold">{formatTimeFrame(alert.timeFrame)}</span>
                          </div>
                        </div>

                        <div class="mt-2 text-sm text-gray-400">
                          –£—Å–ª–æ–≤–∏—è: {formatConditions(alert)}
                        </div>
                      </div>

                      {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                      <div class="flex flex-col gap-2">
                        <button
                          onClick={() => setExpandedAlert(isExpanded ? null : alert.id)}
                          class="px-3 py-1 bg-gray-700 hover:bg-gray-600 rounded transition-colors text-sm"
                        >
                          {isExpanded ? '‚ñ≤' : '‚ñº'}
                        </button>
                        <button
                          onClick={() => alert.isPaused ? onResumeAlert(alert.id) : onPauseAlert(alert.id)}
                          class={`px-3 py-1 rounded transition-colors text-sm ${
                            alert.isPaused
                              ? 'bg-green-600 hover:bg-green-700'
                              : 'bg-yellow-600 hover:bg-yellow-700'
                          }`}
                        >
                          {alert.isPaused ? '‚ñ∂Ô∏è' : '‚è∏Ô∏è'}
                        </button>
                        <button
                          onClick={() => onDeleteAlert(alert.id)}
                          class="px-3 py-1 bg-red-600 hover:bg-red-700 rounded transition-colors text-sm"
                        >
                          üóëÔ∏è
                        </button>
                      </div>
                    </div>

                    {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                    <Show when={isExpanded}>
                      <div class="mt-4 pt-4 border-t border-gray-700 space-y-3">
                        <div class="grid grid-cols-2 gap-4 text-sm">
                          <div>
                            <span class="text-gray-400">–°–æ–∑–¥–∞–Ω:</span>
                            <div class="font-semibold">{formatDate(alert.createdAt)}</div>
                          </div>
                          <div>
                            <span class="text-gray-400">–û–±–Ω–æ–≤–ª–µ–Ω:</span>
                            <div class="font-semibold">{formatDate(alert.updatedAt)}</div>
                          </div>
                          <Show when={alert.lastTriggered}>
                            <div class="col-span-2">
                              <span class="text-gray-400">–ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–µ:</span>
                              <div class="font-semibold text-green-400">{formatDate(alert.lastTriggered)}</div>
                            </div>
                          </Show>
                        </div>

                        <Show when={alert.tags && alert.tags.length > 0}>
                          <div>
                            <span class="text-gray-400 text-sm">–¢–µ–≥–∏:</span>
                            <div class="flex flex-wrap gap-2 mt-1">
                              <For each={alert.tags}>
                                {(tag) => (
                                  <span class="px-2 py-1 bg-gray-700 rounded text-xs">
                                    #{tag}
                                  </span>
                                )}
                              </For>
                            </div>
                          </div>
                        </Show>

                        <div class="text-xs text-gray-500">
                          –ö–∞–Ω–∞–ª—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {alert.notificationChannels.join(', ')}
                        </div>
                      </div>
                    </Show>
                  </div>
                </div>
              );
            }}
          </For>
        </Show>
      </div>
    </div>
  );
}
